<?php

/**
 * @file
 * Main file for custom hooks and functions.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\file\FileInterface;

/**
 * Implements hook_entity_base_field_info().
 *
 * This hook is require to run `drush entity-updates`.
 */
function bnet_oauth_entity_base_field_info(EntityTypeInterface $entity_type) {
  if ($entity_type->id() == 'user') {
    $fields = [];
    $fields['bnet_oauth_battletag'] = BaseFieldDefinition::create('string')
      ->setLabel(t('Battle.net tag'))
      ->setRevisionable(FALSE)
      ->setTranslatable(FALSE);
    $fields['bnet_oauth_id'] = BaseFieldDefinition::create('string')
      ->setLabel(t('Battle.net ID'))
      ->setRevisionable(FALSE)
      ->setTranslatable(FALSE);

    return $fields;
  }
}

/**
 * Implements hook_user_login().
 */
function bnet_oauth_user_login($account) {
  if (!$account->bnet_oauth_battletag->isEmpty()) {
    $battletag = str_replace('#', '-', $account->bnet_oauth_battletag->value);
    $url = "https://playoverwatch.com/en-us/career/pc/$battletag";
    $dom = new DOMDocument();
    @$dom->loadHTMLFile($url);
    $finder = new DOMXPath($dom);
    $nodes = $finder->query('//img[contains(@class,"player-portrait")]');
    if (!empty($nodes[0]->getAttribute('src'))) {
      $picture_path = 'public://bnet-oauth/user-pictures';
      if (file_prepare_directory($picture_path, FILE_CREATE_DIRECTORY)) {
        $file = system_retrieve_file($nodes[0]->getAttribute('src'), $picture_path, TRUE);
        if ($file) {
          $file_usage = \Drupal::service('file.usage');
          // Remove old attached file.
          $old_file = $account->user_picture->entity;
          if ($old_file instanceof FileInterface) {
            $file_usage->delete($old_file, 'bneth_oath', 'user', $account->id());
          }
          $file_usage->add($file, 'bnet_oauth', 'user', $account->id());
          $account->user_picture = $file->id();
          $account->save();
        }
      }
    }
  }
}
