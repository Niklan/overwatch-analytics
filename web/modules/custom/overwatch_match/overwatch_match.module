<?php

/**
 * @file
 * Contains overwatch_match.module.
 */

use Drupal\overwatch_match\Entity\OverwatchMatch;


/**
 * Implements hook_theme().
 */
function overwatch_match_theme() {
  $theme = [];
  $theme['overwatch_match'] = [
    'render element' => 'elements',
    'file' => 'overwatch_match.page.inc',
    'template' => 'overwatch_match',
  ];
  $theme['overwatch_match_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'overwatch_match.page.inc',
  ];
  $theme['overwatch_match_add_competitive_form'] = [
    'variables' => [],
    'file' => 'overwatch_match.theme.inc',
  ];
  return $theme;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function overwatch_match_theme_suggestions_overwatch_match(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#overwatch_match'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'overwatch_match__' . $sanitized_view_mode;
  $suggestions[] = 'overwatch_match__' . $entity->bundle();
  $suggestions[] = 'overwatch_match__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'overwatch_match__' . $entity->id();
  $suggestions[] = 'overwatch_match__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function overwatch_match_overwatch_match_presave(Drupal\Core\Entity\EntityInterface $entity) {
  $result = &drupal_static(__FUNCTION__);
  // Avoid infinity loop, update just once.
  if (!isset($result)) {
    $overwatch_match_helper = \Drupal::service('overwatch_match.helper');

    if ($entity->isNew()) {
      $season_id = $entity->field_season->target_id;
      $last_match_id = $overwatch_match_helper->getLastMatch($season_id);
      if ($last_match_id) {
        $previous_match = OverwatchMatch::load($last_match_id);
        $previous_sr = $previous_match->field_skill_rating->value;
        $current_sr = $entity->field_skill_rating->value;
        if ($previous_sr == $current_sr) {
          $entity->field_match_result = OverwatchMatch::STATUS_DRAW;
        }
        elseif ($previous_sr < $current_sr) {
          $entity->field_match_result = OverwatchMatch::STATUS_VICTORY;
        }
        else {
          $entity->field_match_result = OverwatchMatch::STATUS_DEFEAT;
        }
      }
    }
    else {
      $overwatch_match_helper->updateMatchStatus($entity);
    }

    $result = TRUE;
  }
}

